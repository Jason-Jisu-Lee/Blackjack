[{"C:\\Users\\idfor\\Desktop\\blackjack\\frontend\\src\\index.js":"1","C:\\Users\\idfor\\Desktop\\blackjack\\frontend\\src\\App.js":"2","C:\\Users\\idfor\\Desktop\\blackjack\\frontend\\src\\layout\\Layout.js":"3","C:\\Users\\idfor\\Desktop\\blackjack\\frontend\\src\\layout\\Routes.js":"4","C:\\Users\\idfor\\Desktop\\blackjack\\frontend\\src\\play\\Play.js":"5","C:\\Users\\idfor\\Desktop\\blackjack\\frontend\\src\\signup\\Signup.js":"6","C:\\Users\\idfor\\Desktop\\blackjack\\frontend\\src\\login\\Login.js":"7","C:\\Users\\idfor\\Desktop\\blackjack\\frontend\\src\\play\\Dealer.js":"8","C:\\Users\\idfor\\Desktop\\blackjack\\frontend\\src\\play\\Player.js":"9","C:\\Users\\idfor\\Desktop\\blackjack\\frontend\\src\\utils\\cardGenerator.js":"10"},{"size":286,"mtime":1643006564669,"results":"11","hashOfConfig":"12"},{"size":333,"mtime":1644569258529,"results":"13","hashOfConfig":"12"},{"size":233,"mtime":1645230818973,"results":"14","hashOfConfig":"12"},{"size":534,"mtime":1645230855532,"results":"15","hashOfConfig":"12"},{"size":2714,"mtime":1645415751292,"results":"16","hashOfConfig":"12"},{"size":136,"mtime":1643232537939,"results":"17","hashOfConfig":"12"},{"size":2225,"mtime":1644191993407,"results":"18","hashOfConfig":"12"},{"size":865,"mtime":1645416230133,"results":"19","hashOfConfig":"12"},{"size":898,"mtime":1645417790554,"results":"20","hashOfConfig":"12"},{"size":206,"mtime":1643586165515,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"k324j3",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\idfor\\Desktop\\blackjack\\frontend\\src\\index.js",[],["45","46"],"C:\\Users\\idfor\\Desktop\\blackjack\\frontend\\src\\App.js",[],"C:\\Users\\idfor\\Desktop\\blackjack\\frontend\\src\\layout\\Layout.js",[],"C:\\Users\\idfor\\Desktop\\blackjack\\frontend\\src\\layout\\Routes.js",[],"C:\\Users\\idfor\\Desktop\\blackjack\\frontend\\src\\play\\Play.js",["47","48"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport Player from \"./Player\";\r\nimport Dealer from \"./Dealer\";\r\nimport cardGenerator from \"../utils/cardGenerator\";\r\nimport \"./Play.css\";\r\n\r\nfunction Play() {\r\n  const [message, setMessage] = useState(\"How lucky are you feeling today?\");\r\n  const [playing, setPlaying] = useState(false);\r\n  const [betAmount, setBetAmount] = useState({\r\n    amount: 1,\r\n  });\r\n  const [dealer, setDealer] = useState([]);\r\n  const [player, setPlayer] = useState([]);\r\n  const [cash, setCash] = useState({\r\n    amount: 100,\r\n  });\r\n\r\n  // Deal the first two cards if 'playing'\r\n  useEffect(() => {\r\n    if (playing) {\r\n      while (dealer.length < 2) {\r\n        const generate = setTimeout(() => {\r\n          setDealer((prevState) => [...prevState, cardGenerator()]);\r\n          setPlayer((prevState) => [...prevState, cardGenerator()]);\r\n        }, 500); // Deal each card after a delay to allow the animation to complete\r\n        return () => generate;\r\n      }\r\n    }\r\n  }, [dealer, playing]);\r\n\r\n  // IMPLEMENT HIT/STAND BUTTONS\r\n  const hitHandler = (event) => {\r\n    return null;\r\n  };\r\n  const standHandler = (event) => {\r\n    return null;\r\n  };\r\n\r\n  // Set the bet amount\r\n  const betAmountHandler = (event) => {\r\n    setBetAmount(({ amount }) => ({\r\n      amount: amount + parseInt(event.target.value),\r\n    }));\r\n  };\r\n  // set 'playing' to true if the user makes the bet\r\n  const playHandler = (event) => {\r\n    setPlaying(true);\r\n  };\r\n\r\n  // Display \"active\" or \"inactive\" depending on whether the player is playing.\r\n  const active = (\r\n    <div>\r\n      <button onClick={hitHandler}>Hit</button>\r\n      <button onClick={standHandler}>Stand</button>\r\n    </div>\r\n  );\r\n  const inactive = (\r\n    <div>\r\n      <button onClick={playHandler}>Bet</button>\r\n      <button onClick={betAmountHandler} value=\"1\">\r\n        1\r\n      </button>\r\n      <button onClick={betAmountHandler} value=\"5\">\r\n        5\r\n      </button>\r\n      <button onClick={betAmountHandler} value=\"20\">\r\n        20\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container mb-3 pt-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">Cash in my pocket: {cash.amount}</div>\r\n          <h5 className=\"col-4\">BLACKJACK PAYS 3 TO 2</h5>\r\n        </div>\r\n      </div>\r\n      <div className=\"remark\">{message}</div>\r\n      <div>\r\n        <Dealer playing={playing} dealer={dealer} />\r\n      </div>\r\n      <div className=\"player\">\r\n        <Player playing={playing} player={player} />\r\n      </div>\r\n      <div>Bet Amount: {betAmount.amount}</div>\r\n      {playing === true ? active : inactive}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Play;\r\n","C:\\Users\\idfor\\Desktop\\blackjack\\frontend\\src\\signup\\Signup.js",[],"C:\\Users\\idfor\\Desktop\\blackjack\\frontend\\src\\login\\Login.js",[],"C:\\Users\\idfor\\Desktop\\blackjack\\frontend\\src\\play\\Dealer.js",["49"],"import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nfunction Dealer({ playing, dealer }) {\r\n  const [sum, setSum] = useState(0);\r\n\r\n  const dealerHand = (\r\n    <div className=\"container\">\r\n      <div>Dealer</div>\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-2\">{dealer[0]}</div>\r\n        <div className=\"col-2\">{dealer[1]}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < dealer.length; i++) {\r\n      if (dealer[i] === \"A\") {\r\n        setSum(sum + 11);\r\n      } else if (isNaN(dealer[i])) {\r\n        setSum(sum + 10);\r\n      } else {\r\n        setSum(sum + dealer[i]);\r\n      }\r\n    }\r\n  }, [dealer]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>{playing ? dealerHand : \"Dealer\"}</div>\r\n      <div>{sum === 0 ? null : sum}</div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Dealer;\r\n","C:\\Users\\idfor\\Desktop\\blackjack\\frontend\\src\\play\\Player.js",["50"],"C:\\Users\\idfor\\Desktop\\blackjack\\frontend\\src\\utils\\cardGenerator.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":8,"column":19,"nodeType":"57","messageId":"58","endLine":8,"endColumn":29},{"ruleId":"55","severity":1,"message":"59","line":15,"column":16,"nodeType":"57","messageId":"58","endLine":15,"endColumn":23},{"ruleId":"60","severity":1,"message":"61","line":26,"column":6,"nodeType":"62","endLine":26,"endColumn":14,"suggestions":"63"},{"ruleId":"55","severity":1,"message":"64","line":1,"column":27,"nodeType":"57","messageId":"58","endLine":1,"endColumn":35},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'setMessage' is assigned a value but never used.","Identifier","unusedVar","'setCash' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sum'. Either include it or remove the dependency array. You can also do a functional update 'setSum(s => ...)' if you only need 'sum' in the 'setSum' call.","ArrayExpression",["67"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [dealer, sum]",{"range":"70","text":"71"},[676,684],"[dealer, sum]"]